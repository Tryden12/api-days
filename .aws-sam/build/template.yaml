AWSTemplateFormatVersion: '2010-09-09'
Description: API-DAYS
Transform:
- AWS::Serverless-2016-10-31
Resources:
  AprenderoApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: V1
      Description: API supporting the application
      Cors:
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowMethods: '''DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT'''
        AllowOrigin: '''*'''
  GetAllItems:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAllItems
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DayTable
      Environment:
        Variables:
          DAY_TABLE:
            Ref: DayTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: AprenderoApi
            Path: /
            Method: GET
      CodeUri: GetAllItems
    Metadata:
      SamResourceId: GetAllItems
  GetById:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getById
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DayTable
      Environment:
        Variables:
          DAY_TABLE:
            Ref: DayTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: AprenderoApi
            Path: /{id}
            Method: GET
      CodeUri: GetById
    Metadata:
      SamResourceId: GetById
  PutItem:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putItem
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DayTable
      Environment:
        Variables:
          DAY_TABLE:
            Ref: DayTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: AprenderoApi
            Path: /
            Method: POST
      CodeUri: PutItem
    Metadata:
      SamResourceId: PutItem
  DayTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: DAY_TABLE
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for your App configuration
    Value:
      Fn::Sub: https://${AprenderoApi}.execute-api.${AWS::Region}.amazonaws.com/V1/
